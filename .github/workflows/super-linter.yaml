#################################
## Super Linter GitHub Actions ##
#################################
#################################
name: Lint Code Base

######################################
# Trigger the job on push and pull requests #
######################################
on:
  push:
  pull_request:
    branches: [master, release, develop]

###############
# Set the Job #
###############
jobs:
  build:
    # Name the Job
    name: Lint Code Base
    # Set the agent to run on
    runs-on: ubuntu-latest

    ############################################
    # Grant status permission for MULTI_STATUS #
    ############################################
    permissions:
      contents: read
      packages: read
      statuses: write

    ##################
    # Load all steps #
    ##################
    steps:
      ##########################
      # Cache the linter's dependencies #
      ##########################
      - name: Cache Linter Dependencies
        uses: actions/cache@v3
        with:
          path: /path/to/linter/cache
          key: linter-cache-${{ runner.os }}-${{ hashFiles('**/*.yml') }}
          restore-keys: |
            linter-cache-${{ runner.os }}-

      ##########################
      # Checkout the code base #
      ##########################
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          # Only fetch the latest commit
          fetch-depth: 1

      ################################
      # Run Linter against code base #
      ################################
      - name: Lint Code Base
        uses: super-linter/super-linter@v5
        continue-on-error: true
        env:
          VALIDATE_ALL_CODEBASE: false
          DEFAULT_BRANCH: master
          GITHUB_TOKEN: ${{ secrets.G_TOKEN }}
          REPORT_OUTPUT: sarif
          OUTPUT_FOLDER: reports

      ##########################
      # Install Python and DefectDojo API Client #
      ##########################
      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install DefectDojo API Client
        run: pip install defectdojo_api

      ##########################
      # Upload Linter findings to DefectDojo #
      ##########################
      - name: Upload to DefectDojo
        env:
          DEFECTDOJO_URL: ${{ secrets.DEFECTDOJO_URL }}
          DEFECTDOJO_API_KEY: ${{ secrets.DEFECTDOJO_API_KEY }}
          DEFECTDOJO_ENGAGEMENT_ID: ${{ secrets.DEFECTDOJO_ENGAGEMENT_ID }}
        run: python upload_to_defectdojo.py
